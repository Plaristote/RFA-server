{
  "name": "require-without-cache",
  "version": "0.0.6",
  "description": "require module without cache",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec test/target-test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nazomikan/require-without-cache"
  },
  "keywords": [
    "require",
    "cache",
    "stub"
  ],
  "author": {
    "name": "nazomikan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nazomikan/require-without-cache/issues"
  },
  "homepage": "https://github.com/nazomikan/require-without-cache",
  "devDependencies": {
    "mocha": "^1.19.0",
    "sinon": "^1.10.0"
  },
  "readme": "require-without-cache\n===================\n\nrequire without cache\n\n## How to use\n\n```sh\nnpm install require-without-cache\n```\n\n```javascript\nvar requireWithoutCache = require('require-without-cache')\n  , hoge = requireWithoutCache('./path/to/module', require)\n  ;\n\n// ...\n```\n\n## Using case\n\nIt is intended to be used in the spec file.\n\ntarget file\n\n```javascript\nvar model = require('path/to/model').create();\n\nexports.handle = function (cb) {\n  model.get('foo/model', function (err, res) {\n    cb(err, res);\n  });\n};\n```\n\nspec file\n\n```javascript\nvar requireWithoutCache = require('require-without-cache')\n  , sinon = require('sinon')\n  , assert = require('assert')\n  ;\n\ndescribe('#handle', function () {\n  it('should be error', function (done) {\n    var model = require('path/to/model')\n      , sinon = require('sinon')\n      , target\n      ;\n\n    sinon.stub(model, 'create', function () {\n      return {get: function (name, cb) { return cb('an_error'); }};\n    });\n\n    target = requireWithoutCache('./path/to/module', require); // [1]\n    target.handle(function (err, data) {\n      assert.ok(err);\n      model.create.restore();\n      done();\n    });\n  });\n});\n```\n\nif [1] use normal `require`, `target` may be cache.\n\nIn that case, `model` does not replace the stub.\n\nby require.cache\n\nHowever, you may want to carry out the test without a problem if you use the `require-without-cache`.\n\n\n## API\n\n* requireWithoutCache(path, require)\n  * path {String} filePath\n  * require {Function} require method\n\n## If using custom require\n\nPlease define an API for use by the following.\n\n```javascript\nvar path = require('path');\n\nfunction requireFromAppRoot(relativePath) {\n  var absolutePath\n    ;\n\n  // sample require system\n  absolutePath = requireFromAppRoot.resolve(relativePath);\n  return require(absolutePath);\n};\n\nrequireFromAppRoot.resolve = function (relativePath) {\n  var absolutePath = path.resolve(app_route, relativePath);\n  return require.resolve(absolutePath);\n}\n\nObject.defineProperty(requireFromAppRoot, 'cache', {\n  get: function () {\n    return require.cache;\n  }\n});\n```\n\n`require-without-cache` need `require.resolve` and `require.cache`\n",
  "readmeFilename": "README.md",
  "_id": "require-without-cache@0.0.6",
  "_shasum": "b76566d78f8c5efa58b978266b9cfbeb96e037e2",
  "_from": "require-without-cache@*",
  "_resolved": "https://registry.npmjs.org/require-without-cache/-/require-without-cache-0.0.6.tgz"
}
